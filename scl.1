.TH "scl" "1"
.SH "NAME"
scl \- Setup and run software from Software Collection environment
.SH "SYNOPSIS"
.PP
\fBscl\fP \fI<action>\fR \fI<collection1>\fR [\fI<collection2> ...\fR] \fI<command>\fR
.PP
\fBscl\fP \fI<action>\fR \fI<collection1>\fR [\fI<collection2> ...\fR] -- \fI<command>\fR
.PP
\fBscl\fP {\fB-l|--list\fP} [\fI<collection1> <collection2> ...\fR]
.SH "DESCRIPTION"
.PP
This manual page documents \fBscl\fP, a
program which is an utility for running software packaged as a Software Collection.
.PP
\fBscl\fP utility allows to execute an application which is not located in the filesystem
root hierarchy but is present in an alternative location. This application can still use
and benefit from software installed in the root filesystem. In order to let an application
be visible to the system one has to use \fBscl\fP utility as an interface.
.PP
\fI<action>\fR is a script name to execute in a bash environment before the application
itself takes in executed. Currently only \fBenable\fP scriptlet is mandatory which is needed
to update search paths, etc.
.PP
One can enable more Software Collections if needed and therefore one can use multiple
collections which are enabled by the left-right order as present on \fBscl\fP command-line.
.PP
\fI<command>\fR marks specified Software Collections as enabled. Executes the script,
which is expected to set proper environment. Executes the \fI<command>\fR.
Control is returned back to the caller with the original environment as soon
as the command finishes. If \fI<command>\fR is '-' (dash) then it is
read from the standard input.
.PP
Note: if you use \fI<command>\fR consisting of multiple arguments, you either need to
use quotes or the \fB--\fP command separator. Everything that follows the
separator will be considered a command or its argument.
.PP
Note: some commands modify user environment in some way. Those commands may
potentially break SCLs, as their activation also usually depends on env.
modification as well. Typical examples of such commands are \fBsu\fP and
\fBsudo\fP. Every collection modifies the environment differently, thus more
details may be found in the documentation of the particular collection.
.SH "OPTIONS"
.PP
.IP "\fB-l, --list\fP"
Lists all installed Software Collections on the system.
.IP "\fB-l, --list\fP \fI<collection1> <collection2> ...\fR"
If a collection name is specified then list of installed packages belonging to the collection is listed.
.SH "EXAMPLES"
.TP
scl enable example 'less --version'
runs command 'less --version' in the environment with collection 'example' enabled
.TP
scl enable foo bar bash
runs bash instance with foo and bar Software Collections enabled
.TP
cat my_command | scl enable baz -
run set of commands listed in my_command file in the environment with baz Software Collection
enabled
.TP
scl -l
list all installed collections
.TP
scl -l example
list all packages within example collection
.TP
A wrapper script must use proper quoting or command separator like in the
following examples
.PP
.nf
.RS
#!/bin/bash
COMMAND="ruby $(printf "%q " "$@")"
scl enable ruby193 "$COMMAND"
# or
scl enable ruby193 -- $COMMAND
.RE
.fi
.SH "AUTHOR"
.PP
\fBscl\fP was written by Jindrich Novy <jnovy@redhat.com> and Jan Zeleny
<jzeleny@redhat.com>.
